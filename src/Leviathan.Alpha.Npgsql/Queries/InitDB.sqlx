-- Table: public.hardware_module

CREATE SCHEMA sys;
CREATE SCHEMA hardware;

CREATE TABLE sys.component_category(
   id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
   name character varying(50) NOT NULL,
   description text,
   CONSTRAINT component_category_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE sys.component_type
(
   id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
   component_category_id bigint,
   name character varying(50) NOT NULL,
   description text,
   type_name character varying(1000) NOT NULL,
   assembly_name character varying(1000) NOT NULL,
   assembly_path text NOT NULL,
   CONSTRAINT plugin_pkey PRIMARY KEY (id),
   CONSTRAINT component_type_fk_component_category_id FOREIGN KEY(component_category_id) REFERENCES sys.component_category(id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE hardware.module
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    component_type_id bigint NOT NULL,
    name character varying(50) NOT NULL,
    description text,
    CONSTRAINT module_pkey PRIMARY KEY (id),
    CONSTRAINT module_fk_module_component_type_id FOREIGN KEY(component_type_id) REFERENCES sys.component_type(id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE hardware.connector
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    component_type_id bigint,
    module_id bigint NOT NULL,
    name character varying(50) NOT NULL,
    description text,
    connector_data json,
    CONSTRAINT channel_pkey PRIMARY KEY (id),
    CONSTRAINT module_fk_cpnnector_component_type_id FOREIGN KEY(component_type_id) REFERENCES sys.component_type(id)
)
WITH (
    OIDS = FALSE
);

/*
CREATE TABLE hardware.module_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) NOT NULL,
    type character varying(150) NOT NULL,
    description text,
    CONSTRAINT module_type_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE hardware.channel_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) NOT NULL,
    type character varying(150) NOT NULL,
    description text,
    CONSTRAINT channel_type_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE hardware.module
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    module_type_id integer NOT NULL,
    name character varying(50) NOT NULL,
    description text,
    CONSTRAINT module_pkey PRIMARY KEY (id),
    CONSTRAINT module_fk_module_type_id FOREIGN KEY(module_type_id) REFERENCES hardware.module_type(id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE hardware.channel
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    module_id integer NOT NULL,
    channel_type_id integer,
    name character varying(50) NOT NULL,
    channel_data json,
    description text,
    CONSTRAINT channel_pkey PRIMARY KEY (id),
    CONSTRAINT module_fk_channel_type_id FOREIGN KEY(channel_type_id) REFERENCES hardware.channel_type(id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE hardware.channel_controller_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) NOT NULL,
    type character varying(150) NOT NULL,

    CONSTRAINT controller_type_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE hardware.channel_controller
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    controller_type_id integer NOT NULL,
    channel_id integer NOT NULL,
    name character varying(50) NOT NULL,
    CONSTRAINT channel_controller_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
);
*/